{
  "superClass": "org.apache.kafka.common.requests.AbstractResponse",
  "subClass": "org.apache.kafka.common.requests.LeaderAndIsrResponse",
  "files": [
    "clients/src/main/java/org/apache/kafka/common/requests/AbstractResponse.java",
    "clients/src/main/java/org/apache/kafka/common/requests/LeaderAndIsrResponse.java"
  ],
  "dependencyChain": [
    {
      "from": "org.apache.kafka.common.requests.AbstractResponse.parseResponse",
      "to": "org.apache.kafka.common.requests.LeaderAndIsrResponse.parse",
      "relationType": "Call"
    }
  ],
  "codeSnippets": [
    {
      "fromFile": "clients/src/main/java/org/apache/kafka/common/requests/AbstractResponse.java",
      "toFile": "clients/src/main/java/org/apache/kafka/common/requests/LeaderAndIsrResponse.java",
      "relationType": "Call",
      "parentMethod": {
        "entity": "org.apache.kafka.common.requests.AbstractResponse.parseResponse",
        "location": "112â€“300",
        "code": "public static AbstractResponse parseResponse(ApiKeys apiKey, ByteBuffer responseBuffer, short version) {\n        switch (apiKey) {\n            case PRODUCE:\n                return ProduceResponse.parse(responseBuffer, version);\n            case FETCH:\n                return FetchResponse.parse(responseBuffer, version);\n            case LIST_OFFSETS:\n                return ListOffsetsResponse.parse(responseBuffer, version);\n            case METADATA:\n                return MetadataResponse.parse(responseBuffer, version);\n            case OFFSET_COMMIT:\n                return OffsetCommitResponse.parse(responseBuffer, version);\n            case OFFSET_FETCH:\n                return OffsetFetchResponse.parse(responseBuffer, version);\n            case FIND_COORDINATOR:\n                return FindCoordinatorResponse.parse(responseBuffer, version);\n            case JOIN_GROUP:\n                return JoinGroupResponse.parse(responseBuffer, version);\n            case HEARTBEAT:\n                return HeartbeatResponse.parse(responseBuffer, version);\n            case LEAVE_GROUP:\n                return LeaveGroupResponse.parse(responseBuffer, version);\n            case SYNC_GROUP:\n                return SyncGroupResponse.parse(responseBuffer, version);\n            case STOP_REPLICA:\n                return StopReplicaResponse.parse(responseBuffer, version);\n            case CONTROLLED_SHUTDOWN:\n                return ControlledShutdownResponse.parse(responseBuffer, version);\n            case UPDATE_METADATA:\n                return UpdateMetadataResponse.parse(responseBuffer, version);\n            case LEADER_AND_ISR:\n                return LeaderAndIsrResponse.parse(responseBuffer, version);\n            case DESCRIBE_GROUPS:\n                return DescribeGroupsResponse.parse(responseBuffer, version);\n            case LIST_GROUPS:\n                return ListGroupsResponse.parse(responseBuffer, version);\n            case SASL_HANDSHAKE:\n                return SaslHandshakeResponse.parse(responseBuffer, version);\n            case API_VERSIONS:\n                return ApiVersionsResponse.parse(responseBuffer, version);\n            case CREATE_TOPICS:\n                return CreateTopicsResponse.parse(responseBuffer, version);\n            case DELETE_TOPICS:\n                return DeleteTopicsResponse.parse(responseBuffer, version);\n            case DELETE_RECORDS:\n                return DeleteRecordsResponse.parse(responseBuffer, version);\n            case INIT_PRODUCER_ID:\n                return InitProducerIdResponse.parse(responseBuffer, version);\n            case OFFSET_FOR_LEADER_EPOCH:\n                return OffsetsForLeaderEpochResponse.parse(responseBuffer, version);\n            case ADD_PARTITIONS_TO_TXN:\n                return AddPartitionsToTxnResponse.parse(responseBuffer, version);\n            case ADD_OFFSETS_TO_TXN:\n                return AddOffsetsToTxnResponse.parse(responseBuffer, version);\n            case END_TXN:\n                return EndTxnResponse.parse(responseBuffer, version);\n            case WRITE_TXN_MARKERS:\n                return WriteTxnMarkersResponse.parse(responseBuffer, version);\n            case TXN_OFFSET_COMMIT:\n                return TxnOffsetCommitResponse.parse(responseBuffer, version);\n            case DESCRIBE_ACLS:\n                return DescribeAclsResponse.parse(responseBuffer, version);\n            case CREATE_ACLS:\n                return CreateAclsResponse.parse(responseBuffer, version);\n            case DELETE_ACLS:\n                return DeleteAclsResponse.parse(responseBuffer, version);\n            case DESCRIBE_CONFIGS:\n                return DescribeConfigsResponse.parse(responseBuffer, version);\n            case ALTER_CONFIGS:\n                return AlterConfigsResponse.parse(responseBuffer, version);\n            case ALTER_REPLICA_LOG_DIRS:\n                return AlterReplicaLogDirsResponse.parse(responseBuffer, version);\n            case DESCRIBE_LOG_DIRS:\n                return DescribeLogDirsResponse.parse(responseBuffer, version);\n            case SASL_AUTHENTICATE:\n                return SaslAuthenticateResponse.parse(responseBuffer, version);\n            case CREATE_PARTITIONS:\n                return CreatePartitionsResponse.parse(responseBuffer, version);\n            case CREATE_DELEGATION_TOKEN:\n                return CreateDelegationTokenResponse.parse(responseBuffer, version);\n            case RENEW_DELEGATION_TOKEN:\n                return RenewDelegationTokenResponse.parse(responseBuffer, version);\n            case EXPIRE_DELEGATION_TOKEN:\n                return ExpireDelegationTokenResponse.parse(responseBuffer, version);\n            case DESCRIBE_DELEGATION_TOKEN:\n                return DescribeDelegationTokenResponse.parse(responseBuffer, version);\n            case DELETE_GROUPS:\n                return DeleteGroupsResponse.parse(responseBuffer, version);\n            case ELECT_LEADERS:\n                return ElectLeadersResponse.parse(responseBuffer, version);\n            case INCREMENTAL_ALTER_CONFIGS:\n                return IncrementalAlterConfigsResponse.parse(responseBuffer, version);\n            case ALTER_PARTITION_REASSIGNMENTS:\n                return AlterPartitionReassignmentsResponse.parse(responseBuffer, version);\n            case LIST_PARTITION_REASSIGNMENTS:\n                return ListPartitionReassignmentsResponse.parse(responseBuffer, version);\n            case OFFSET_DELETE:\n                return OffsetDeleteResponse.parse(responseBuffer, version);\n            case DESCRIBE_CLIENT_QUOTAS:\n                return DescribeClientQuotasResponse.parse(responseBuffer, version);\n            case ALTER_CLIENT_QUOTAS:\n                return AlterClientQuotasResponse.parse(responseBuffer, version);\n            case DESCRIBE_USER_SCRAM_CREDENTIALS:\n                return DescribeUserScramCredentialsResponse.parse(responseBuffer, version);\n            case ALTER_USER_SCRAM_CREDENTIALS:\n                return AlterUserScramCredentialsResponse.parse(responseBuffer, version);\n            case VOTE:\n                return VoteResponse.parse(responseBuffer, version);\n            case BEGIN_QUORUM_EPOCH:\n                return BeginQuorumEpochResponse.parse(responseBuffer, version);\n            case END_QUORUM_EPOCH:\n                return EndQuorumEpochResponse.parse(responseBuffer, version);\n            case DESCRIBE_QUORUM:\n                return DescribeQuorumResponse.parse(responseBuffer, version);\n            case ALTER_PARTITION:\n                return AlterPartitionResponse.parse(responseBuffer, version);\n            case UPDATE_FEATURES:\n                return UpdateFeaturesResponse.parse(responseBuffer, version);\n            case ENVELOPE:\n                return EnvelopeResponse.parse(responseBuffer, version);\n            case FETCH_SNAPSHOT:\n                return FetchSnapshotResponse.parse(responseBuffer, version);\n            case DESCRIBE_CLUSTER:\n                return DescribeClusterResponse.parse(responseBuffer, version);\n            case DESCRIBE_PRODUCERS:\n                return DescribeProducersResponse.parse(responseBuffer, version);\n            case BROKER_REGISTRATION:\n                return BrokerRegistrationResponse.parse(responseBuffer, version);\n            case BROKER_HEARTBEAT:\n                return BrokerHeartbeatResponse.parse(responseBuffer, version);\n            case UNREGISTER_BROKER:\n                return UnregisterBrokerResponse.parse(responseBuffer, version);\n            case DESCRIBE_TRANSACTIONS:\n                return DescribeTransactionsResponse.parse(responseBuffer, version);\n            case LIST_TRANSACTIONS:\n                return ListTransactionsResponse.parse(responseBuffer, version);\n            case ALLOCATE_PRODUCER_IDS:\n                return AllocateProducerIdsResponse.parse(responseBuffer, version);\n            case CONSUMER_GROUP_HEARTBEAT:\n                return ConsumerGroupHeartbeatResponse.parse(responseBuffer, version);\n            case CONSUMER_GROUP_DESCRIBE:\n                return ConsumerGroupDescribeResponse.parse(responseBuffer, version);\n            case CONTROLLER_REGISTRATION:\n                return ControllerRegistrationResponse.parse(responseBuffer, version);\n            case GET_TELEMETRY_SUBSCRIPTIONS:\n                return GetTelemetrySubscriptionsResponse.parse(responseBuffer, version);\n            case PUSH_TELEMETRY:\n                return PushTelemetryResponse.parse(responseBuffer, version);\n            case ASSIGN_REPLICAS_TO_DIRS:\n                return AssignReplicasToDirsResponse.parse(responseBuffer, version);\n            case LIST_CLIENT_METRICS_RESOURCES:\n                return ListClientMetricsResourcesResponse.parse(responseBuffer, version);\n            case DESCRIBE_TOPIC_PARTITIONS:\n                return DescribeTopicPartitionsResponse.parse(responseBuffer, version);\n            case SHARE_GROUP_HEARTBEAT:\n                return ShareGroupHeartbeatResponse.parse(responseBuffer, version);\n            case SHARE_GROUP_DESCRIBE:\n                return ShareGroupDescribeResponse.parse(responseBuffer, version);\n            case SHARE_FETCH:\n                return ShareFetchResponse.parse(responseBuffer, version);\n            case SHARE_ACKNOWLEDGE:\n                return ShareAcknowledgeResponse.parse(responseBuffer, version);\n            case ADD_RAFT_VOTER:\n                return AddRaftVoterResponse.parse(responseBuffer, version);\n            case REMOVE_RAFT_VOTER:\n                return RemoveRaftVoterResponse.parse(responseBuffer, version);\n            case UPDATE_RAFT_VOTER:\n                return UpdateRaftVoterResponse.parse(responseBuffer, version);\n            case INITIALIZE_SHARE_GROUP_STATE:\n                return InitializeShareGroupStateResponse.parse(responseBuffer, version);\n            case READ_SHARE_GROUP_STATE:\n                return ReadShareGroupStateResponse.parse(responseBuffer, version);\n            case WRITE_SHARE_GROUP_STATE:\n                return WriteShareGroupStateResponse.parse(responseBuffer, version);\n            case DELETE_SHARE_GROUP_STATE:\n                return DeleteShareGroupStateResponse.parse(responseBuffer, version);\n            case READ_SHARE_GROUP_STATE_SUMMARY:\n                return ReadShareGroupStateSummaryResponse.parse(responseBuffer, version);\n            case STREAMS_GROUP_HEARTBEAT:\n                return StreamsGroupHeartbeatResponse.parse(responseBuffer, version);\n            case STREAMS_GROUP_DESCRIBE:\n                return StreamsGroupDescribeResponse.parse(responseBuffer, version);\n            case DESCRIBE_SHARE_GROUP_OFFSETS:\n                return DescribeShareGroupOffsetsResponse.parse(responseBuffer, version);\n            default:\n                throw new AssertionError(String.format(\"ApiKey %s is not currently handled in `parseResponse`, the \" +\n                        \"code should be updated to do so.\", apiKey));\n        }\n    }"
      },
      "childMethod": {
        "entity": "org.apache.kafka.common.requests.LeaderAndIsrResponse.parse",
        "location": "107â€“109",
        "code": "public static LeaderAndIsrResponse parse(ByteBuffer buffer, short version) {\n        return new LeaderAndIsrResponse(new LeaderAndIsrResponseData(new ByteBufferAccessor(buffer), version), version);\n    }"
      },
      "invocation": {
        "location": "143â€“143",
        "code": "return LeaderAndIsrResponse.parse(responseBuffer, version);"
      }
    }
  ]
}